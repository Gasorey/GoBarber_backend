import { Token } from 'auth-header';
import { AuthOptions } from '../plugins/common/method/AuthOptions';
import { Request } from '../types';
import { AuthProvider } from './AuthProvider';
import { Principal } from './Principal';
export declare class BasicAuthProvider extends AuthProvider {
    get options(): BasicAuthProviderOptions;
    private _options;
    constructor(options?: BasicAuthProviderOptions);
    authenticate(request: Request, token: Token, options: AuthOptions): Promise<Principal>;
    provideUser(login: string, userOptions: BasicAuthUserOptions, token: Token): Principal;
}
export declare const DEFAULT_BASIC_AUTH_PROVIDER_OPTIONS: BasicAuthProviderOptions;
export interface BasicAuthProviderOptions {
    [login: string]: BasicAuthUserOptions;
}
export interface BasicAuthUserOptions {
    password: string;
    firstname?: string;
    lastname?: string;
    email?: string;
    roles?: string[];
}
