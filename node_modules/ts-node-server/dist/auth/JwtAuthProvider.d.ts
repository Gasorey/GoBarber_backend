import { Token } from 'auth-header';
import { AuthOptions } from '../plugins/common/method/AuthOptions';
import { Request } from '../types';
import { AuthProvider } from './AuthProvider';
import { Principal } from './Principal';
export declare class JwtAuthProvider extends AuthProvider {
    get options(): JwtAuthProviderOptions;
    private _options;
    private _certificate;
    constructor(options?: JwtAuthProviderOptions);
    authenticate(request: Request, token: Token, options: AuthOptions): Promise<Principal>;
    provideUser(decodedToken: object, token: Token): Principal;
}
export declare const DEFAULT_JWT_AUTH_PROVIDER_OPTIONS: JwtAuthProviderOptions;
export interface JwtAuthProviderOptions {
    certificate: string;
    authorizationUrl: string;
    application: string;
}
