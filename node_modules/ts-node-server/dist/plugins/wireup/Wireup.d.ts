import { FastifyInstance } from 'fastify';
import { Container } from 'inversify';
import { Reply, Request } from '../../types';
import { WireupEndpoint } from '../common/CommonUtil';
export declare class Wireup {
    static getHandler(endpoint: WireupEndpoint): (request: Request, reply: Reply) => Promise<any>;
    static getAuthorizationHandler(container: Container, endpoint: WireupEndpoint): (request: Request, reply: Reply) => Promise<void>;
    static getJsonSerializer(): (data: any) => any;
    static getYamlSerializer(): (data: any) => any;
    static getSerializerHandler(): (request: Request, reply: Reply, done: any) => void;
    static getPlugin(instance: FastifyInstance, opts: {
        container: Container;
    }, next: (err?: Error) => void): void;
    private static logger;
}
